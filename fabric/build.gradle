plugins {
    id 'fabric-loom'
}

repositories {
    mavenCentral() // Ensure Maven Central is included
    maven { url = 'https://maven.fabricmc.net/' } // Add Fabric's Maven repository
    maven { url = 'https://maven.architectury.dev/' } // Add Architectury's Maven repository
}

dependencies {
    implementation project(':common')
    
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

loom {
    mixin {
        defaultRefmapName = "${mod_id}.refmap.json" // Ensure mixin remap type is properly configured
    }
    def aw = project(':common').file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Ensure proper encoding
}

task moveBuiltFiles(type: Copy) {
    from("$buildDir/libs")
    into("$rootDir/build")
    include("*.jar")
}
build.finalizedBy(moveBuiltFiles)
