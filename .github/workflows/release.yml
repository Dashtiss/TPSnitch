name: Release Mods

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 21

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build all loaders (Fabric, NeoForge, Forge)
        run: ./gradlew build

      - name: Gather JARs
        run: |
          mkdir -p release-jars
          cp fabric/build/libs/*.jar release-jars/ || true
          cp forge/build/libs/*.jar release-jars/ || true
          cp neoforge/build/libs/*.jar release-jars/ || true

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: TPSnitch ${{ github.ref_name }}
          draft: true
          prerelease: false

      - name: Upload Fabric JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: fabric/build/libs/$(ls fabric/build/libs | grep '.jar' | head -n 1)
          asset_name: $(ls fabric/build/libs | grep '.jar' | head -n 1)
          asset_content_type: application/java-archive
        if: always()

      - name: Upload Forge JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forge/build/libs/$(ls forge/build/libs | grep '.jar' | head -n 1)
          asset_name: $(ls forge/build/libs | grep '.jar' | head -n 1)
          asset_content_type: application/java-archive
        if: always()

      - name: Upload NeoForge JAR
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: neoforge/build/libs/$(ls neoforge/build/libs | grep '.jar' | head -n 1)
          asset_name: $(ls neoforge/build/libs | grep '.jar' | head -n 1)
          asset_content_type: application/java-archive
        if: always()
